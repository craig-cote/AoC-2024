namespace Challenges
{
	public class Day2
	{
		private const string Test = "1 2 3 4\r\n1 5 6 7\r\n1 2 3 7\r\n5 1 4 5 6\r\n1 2 3 5 1\r\n4 3 2 1\r\n7 6 5 1\r\n7 3 2 1\r\n1 5 3 2 1\r\n1 4 3 2 1\r\n5 11 2 1\r\n5 5 2 1";
		private const string Example = "7 6 4 2 1\r\n1 2 7 8 9\r\n9 7 6 2 1\r\n1 3 2 4 5\r\n8 6 4 4 1\r\n1 3 6 7 9\r\n85 81 79 77 75 73 70\r\n84 81 79 77 75 73 69\r\n1 5 6 7 10\r\n1 4 6 7 9 13";
		private const string Data = "67 69 71 72 75 78 76\r\n4 6 7 9 11 12 12\r\n20 22 25 27 28 29 33\r\n35 37 39 42 43 46 48 53\r\n46 49 48 51 53\r\n31 33 31 34 31\r\n83 86 85 88 89 91 91\r\n74 75 78 81 80 83 86 90\r\n72 73 72 74 75 80\r\n19 21 22 25 25 28\r\n4 6 6 7 10 9\r\n49 51 52 55 55 58 58\r\n40 41 43 44 44 48\r\n53 56 56 57 62\r\n26 29 33 34 36 38\r\n35 38 41 45 44\r\n28 31 33 35 39 39\r\n75 77 81 82 86\r\n85 86 88 89 93 98\r\n78 80 85 88 90\r\n36 39 42 43 44 47 53 50\r\n74 77 80 85 86 87 90 90\r\n51 53 54 57 59 64 68\r\n15 17 23 25 32\r\n46 45 47 49 51\r\n25 23 26 27 30 27\r\n51 50 51 52 53 53\r\n51 50 52 55 56 59 63\r\n40 38 40 42 43 48\r\n23 21 22 19 22 25\r\n22 20 22 25 24 27 30 28\r\n95 92 94 95 93 93\r\n78 75 77 76 80\r\n31 30 31 33 31 32 37\r\n12 10 12 15 15 18\r\n67 66 68 68 67\r\n67 64 64 66 66\r\n71 70 72 72 74 75 78 82\r\n15 14 14 16 19 20 25\r\n50 47 48 50 52 56 58 59\r\n5 4 5 8 12 15 14\r\n37 34 36 40 42 45 45\r\n5 2 4 5 9 10 11 15\r\n11 8 12 13 15 20\r\n25 22 25 32 34 37 38 41\r\n6 4 7 10 16 13\r\n95 92 97 99 99\r\n17 16 23 24 28\r\n78 75 80 81 86\r\n11 11 14 16 17\r\n40 40 43 45 48 50 47\r\n37 37 40 41 42 43 46 46\r\n90 90 92 94 98\r\n35 35 36 38 43\r\n74 74 77 76 79 82 84 87\r\n23 23 25 27 26 23\r\n94 94 95 98 95 96 97 97\r\n70 70 68 70 74\r\n2 2 1 2 8\r\n46 46 48 48 51\r\n69 69 72 74 77 79 79 77\r\n49 49 52 54 57 57 57\r\n28 28 29 29 33\r\n51 51 53 56 56 59 61 67\r\n27 27 29 33 36 39 42\r\n29 29 30 34 37 38 41 39\r\n34 34 35 36 40 42 42\r\n22 22 26 28 32\r\n7 7 10 14 20\r\n35 35 38 39 46 48\r\n23 23 24 26 29 36 35\r\n27 27 29 35 35\r\n61 61 66 69 70 74\r\n26 26 32 34 36 43\r\n41 45 46 48 49 51\r\n5 9 11 13 14 16 17 15\r\n72 76 79 81 83 86 87 87\r\n64 68 69 72 75 76 79 83\r\n27 31 33 36 37 40 46\r\n85 89 92 93 94 91 92\r\n65 69 66 67 68 70 72 71\r\n84 88 91 94 93 93\r\n78 82 79 82 83 84 86 90\r\n15 19 20 19 24\r\n41 45 48 50 53 53 56 59\r\n27 31 32 32 31\r\n84 88 88 90 90\r\n8 12 12 13 17\r\n84 88 89 89 95\r\n58 62 64 68 69 71\r\n1 5 9 12 15 14\r\n57 61 62 65 68 69 73 73\r\n1 5 9 10 14\r\n46 50 53 57 63\r\n63 67 68 69 74 75 77\r\n55 59 66 68 70 68\r\n6 10 11 17 17\r\n76 80 82 88 89 90 94\r\n73 77 82 85 90\r\n12 18 19 22 24\r\n47 54 55 58 60 62 59\r\n4 9 11 14 14\r\n64 70 71 72 73 77\r\n80 86 88 90 95\r\n61 68 71 68 71 74 76\r\n79 85 87 84 85 88 86\r\n51 56 57 55 58 58\r\n37 42 41 44 45 48 50 54\r\n74 79 76 78 80 82 88\r\n61 66 66 67 70\r\n37 43 46 49 49 48\r\n77 82 85 86 88 91 91 91\r\n26 33 33 35 36 37 39 43\r\n42 49 49 52 58\r\n39 44 47 50 52 56 58\r\n36 41 43 44 47 48 52 51\r\n42 49 50 54 54\r\n63 70 73 75 77 81 85\r\n74 80 84 87 93\r\n75 80 83 86 93 94\r\n4 10 13 14 19 21 20\r\n65 72 75 80 83 86 89 89\r\n64 70 73 74 80 81 82 86\r\n20 25 30 33 38\r\n57 56 54 51 48 49\r\n88 87 86 83 83\r\n55 52 49 48 45 42 40 36\r\n59 56 54 53 50 49 44\r\n28 26 25 22 21 20 21 19\r\n10 9 7 5 7 10\r\n44 42 40 43 43\r\n50 47 50 48 47 44 43 39\r\n79 76 78 77 74 69\r\n32 29 29 27 25\r\n30 29 26 23 20 20 22\r\n61 58 58 56 55 54 51 51\r\n80 77 76 76 72\r\n56 54 51 51 44\r\n64 61 58 56 55 51 50 47\r\n28 26 25 21 20 18 16 19\r\n94 93 91 89 86 82 82\r\n76 74 73 70 69 65 64 60\r\n76 75 71 70 63\r\n66 63 62 57 56\r\n55 53 50 44 47\r\n53 52 49 46 44 42 37 37\r\n66 64 63 57 53\r\n41 39 37 36 33 28 26 21\r\n21 24 21 19 17 14\r\n67 70 68 65 64 62 61 62\r\n52 53 52 49 49\r\n85 86 85 84 83 81 77\r\n30 32 29 27 25 20\r\n77 80 81 80 77 76\r\n96 99 98 95 92 94 96\r\n87 88 91 90 90\r\n63 65 64 63 66 65 61\r\n76 78 77 75 76 70\r\n50 51 48 48 47 46 45 44\r\n73 76 75 75 78\r\n56 57 56 56 55 54 52 52\r\n53 56 54 54 51 49 47 43\r\n64 67 67 66 60\r\n56 58 55 53 52 48 45\r\n44 45 44 41 37 40\r\n15 17 16 12 12\r\n58 60 58 57 54 50 47 43\r\n52 55 51 48 41\r\n83 86 81 78 77 75\r\n46 47 45 44 43 37 40\r\n59 60 53 51 50 48 48\r\n23 26 25 24 23 17 13\r\n54 55 48 46 45 43 41 34\r\n14 14 11 10 7 5\r\n80 80 78 75 74 72 69 71\r\n63 63 62 60 58 58\r\n65 65 64 63 59\r\n98 98 95 94 92 89 87 81\r\n97 97 98 97 96\r\n95 95 97 96 97\r\n45 45 44 42 40 38 41 41\r\n6 6 7 5 1\r\n22 22 23 22 17\r\n47 47 46 44 44 43\r\n23 23 21 21 20 19 21\r\n30 30 27 27 24 24\r\n82 82 82 81 77\r\n51 51 49 49 48 46 41\r\n16 16 13 9 7 5 4 1\r\n82 82 78 77 75 73 76\r\n89 89 87 83 80 80\r\n64 64 61 57 55 51\r\n59 59 55 54 52 50 44\r\n36 36 30 28 25\r\n33 33 30 29 23 20 23\r\n13 13 7 6 6\r\n51 51 48 47 41 39 35\r\n92 92 86 84 82 81 78 72\r\n97 93 92 89 88 85 83\r\n58 54 52 50 49 47 49\r\n42 38 36 34 31 31\r\n86 82 80 79 76 75 71\r\n92 88 87 86 84 77\r\n55 51 48 47 45 48 46 45\r\n40 36 37 35 36\r\n20 16 15 12 15 12 12\r\n51 47 48 45 42 38\r\n83 79 77 78 76 75 69\r\n27 23 21 18 15 15 13 11\r\n80 76 74 71 70 70 73\r\n78 74 72 72 71 69 68 68\r\n29 25 24 24 21 17\r\n67 63 61 61 55\r\n98 94 90 87 85 83 82\r\n98 94 90 87 86 87\r\n44 40 36 33 33\r\n96 92 90 86 82\r\n49 45 42 38 31\r\n70 66 65 58 56 53\r\n49 45 42 41 39 32 33\r\n37 33 32 27 26 25 25\r\n34 30 29 27 25 24 18 14\r\n26 22 19 18 13 12 5\r\n59 53 51 49 46 43\r\n28 21 18 16 14 11 9 12\r\n21 16 15 12 11 11\r\n28 22 21 20 17 14 10\r\n49 43 40 37 31\r\n14 7 6 8 5 2 1\r\n42 36 34 32 35 37\r\n49 42 41 43 40 39 38 38\r\n61 54 57 54 53 50 47 43\r\n97 90 92 91 89 86 85 79\r\n36 29 27 25 25 24 21\r\n28 23 23 20 18 16 17\r\n33 27 26 26 23 20 20\r\n90 83 83 80 76\r\n34 28 28 25 22 17\r\n61 54 50 47 46 44 43 42\r\n22 16 13 10 7 3 5\r\n73 68 64 63 63\r\n44 37 36 32 30 29 25\r\n85 79 78 75 71 65\r\n64 57 52 51 50\r\n54 47 42 39 40\r\n88 82 80 77 71 71\r\n61 55 54 49 45\r\n94 89 88 82 76\r\n43 40 37 34 31 28 27 30\r\n21 25 28 32 34 35 33\r\n54 57 59 58 57 55\r\n27 31 33 35 39\r\n10 14 16 16 17 18 22\r\n66 69 70 69 72 74\r\n21 27 29 31 34 41 45\r\n44 45 51 53 56 59 60 64\r\n73 74 71 65 62 61 62\r\n54 51 49 46 42 39 34\r\n81 83 82 75 72 70 66\r\n58 57 60 63 63 65 63\r\n72 71 68 64 64\r\n89 83 77 74 74\r\n42 45 48 52 51\r\n16 16 18 18 22\r\n62 69 72 75 76 76 77 80\r\n10 10 13 13 18\r\n53 59 62 64 64 65 67 71\r\n73 70 68 66 67 65 61\r\n95 92 89 87 85 80 79 78\r\n2 2 3 9 9\r\n77 76 71 70 66\r\n46 42 41 41 39 36 32\r\n57 58 57 53 50 50\r\n82 78 77 75 73 67 68\r\n71 69 73 76 77 75\r\n58 64 65 67 66 68 71\r\n95 91 88 86 82 83\r\n38 38 35 32 32\r\n39 42 45 48 50 54 56 61\r\n82 88 91 92 90\r\n51 47 45 42 41 39 37 38\r\n86 88 88 86 84 83 83\r\n62 62 58 56 54 54\r\n65 58 55 54 53 49\r\n90 86 85 82 79\r\n34 37 35 33 32 31 24 24\r\n93 89 86 89 91\r\n29 36 37 44 47 44\r\n32 35 33 32 29 26 25 22\r\n47 43 42 38 38\r\n80 82 83 82 82\r\n8 8 9 10 11 14 16 18\r\n16 14 17 19 20 21 28 25\r\n27 30 29 26 22\r\n65 64 61 60 57 53 51\r\n13 20 22 26 26\r\n47 42 41 39 37 35 33 33\r\n45 47 53 54 55 60\r\n66 62 60 58 55 56 54 50\r\n63 67 69 73 75 78 79 79\r\n4 6 7 10 12 9 10 14\r\n32 27 24 20 17 15 10\r\n39 39 38 36 35 37 33\r\n63 65 67 64 67\r\n24 24 22 23 22\r\n13 20 21 22 26\r\n27 27 24 22 21 21 18 20\r\n26 29 31 32 34 33\r\n76 76 75 74 71 68 64 62\r\n10 10 12 10 9 10\r\n47 40 37 36 34 37\r\n48 48 46 45 42 42 37\r\n58 58 57 51 48 42\r\n23 19 17 14 7 4\r\n64 57 55 50 47 46 49\r\n59 62 60 57 55 52 50 52\r\n55 50 50 47 45 39\r\n69 65 63 65 64 63 62\r\n55 56 54 50 48 47 50\r\n20 20 15 12 10 9\r\n38 37 37 40 41 44 46 46\r\n65 68 70 67 68 68\r\n5 7 13 16 19\r\n72 71 76 79 85\r\n86 81 78 75 73 76 73 67\r\n80 74 73 70 72 73\r\n71 67 60 59 58 55 52 52\r\n56 60 62 61 64 66 67 71\r\n79 74 71 67 65 64\r\n41 37 33 32 25\r\n96 90 88 86 80 78 76 72\r\n47 44 46 49 48 50 53\r\n12 19 23 24 27 28\r\n95 97 95 92 89 83\r\n47 44 46 49 50 57 58 58\r\n63 67 70 70 68\r\n34 30 27 26 19\r\n19 23 28 31 29\r\n46 53 54 58 61 66\r\n14 17 14 11 11 7\r\n77 77 75 74 73 71 68\r\n61 61 63 67 72\r\n59 55 53 50 47 45 45\r\n93 91 92 89 88\r\n55 48 46 47 45 43 40 40\r\n52 46 45 42 38 34\r\n76 73 72 69 65 63 64\r\n45 45 43 41 42\r\n69 69 66 63 59 56 52\r\n34 40 41 44 47 50 50\r\n42 42 45 52 55 57 64\r\n64 68 70 73 79\r\n66 60 59 56 53 53 50 46\r\n51 50 52 54 56 57 61\r\n52 59 62 62 63 66 64\r\n84 84 85 88 91 94 97 97\r\n57 57 60 59 58 58\r\n25 22 19 20 21 22 26\r\n67 65 63 61 58 57 56 50\r\n61 61 62 66 68 71\r\n86 79 77 75 76 73 69\r\n2 3 6 6 8 10 7\r\n17 22 24 27 32\r\n17 17 10 9 6 5 7\r\n73 69 72 71 65\r\n21 17 15 13 15 12 11 11\r\n28 31 34 38 42\r\n57 57 56 53 50 48 48 44\r\n71 69 70 71 72 73 74 81\r\n2 6 6 7 9\r\n7 11 12 15 16 16 18 18\r\n24 20 19 18 16 11 9 5\r\n85 81 79 77 75 73 69\r\n23 24 27 29 30 32 32 32\r\n36 29 26 26 24 21\r\n6 5 8 11 12 12 15 17\r\n14 9 7 6 6 6\r\n28 25 22 22 21\r\n74 75 73 71 73 71 67\r\n46 50 51 56 58 61 62 64\r\n16 23 25 29 32 34 35 39\r\n37 37 43 45 42\r\n26 26 32 34 38\r\n11 11 13 14 15 18 18 19\r\n75 77 74 70 67 63\r\n68 74 71 73 76 79 82 87\r\n69 69 71 70 67 61\r\n77 80 81 81 85\r\n36 39 36 33 33 32 29 30\r\n18 20 23 23 25 26\r\n80 86 88 85 89\r\n22 21 18 16 13 13\r\n64 64 63 61 56\r\n25 23 24 24 27 33\r\n16 16 17 19 18 19\r\n62 58 58 57 55 54\r\n20 25 27 32 32\r\n38 33 32 31 28 26 20\r\n77 76 75 73 70 63 63\r\n44 49 50 56 57 58 60\r\n48 53 56 58 60 60 63 63\r\n65 60 59 58 58 57 59\r\n35 36 38 39 42 49\r\n17 13 11 11 8 8\r\n67 71 75 78 84\r\n81 81 82 85 87 90 91 95\r\n69 69 72 74 77 80 86\r\n59 58 57 57 59\r\n57 60 61 64 67 66 71\r\n59 58 61 64 65 67 64\r\n51 51 53 56 53 53\r\n24 26 27 31 33 34\r\n26 27 30 32 35 35\r\n82 85 83 82 79 76 76 69\r\n60 56 54 52 51 45 42 35\r\n20 13 14 11 10\r\n73 71 68 67 64 61 57\r\n28 29 28 24 18\r\n54 47 45 39 38 35\r\n41 43 46 50 53 53\r\n32 36 38 44 47 54\r\n17 16 16 15 11\r\n50 51 48 48 46\r\n54 52 53 51 56\r\n21 25 27 30 32 30 36\r\n79 77 79 80 80 84\r\n18 19 18 17 14 13 13\r\n8 15 16 18 20 20 26\r\n42 42 44 48 49 49\r\n44 37 34 31 30 26 25 25\r\n76 80 81 82 88 92\r\n27 27 22 21 18 15 15\r\n26 26 25 19 17 13\r\n35 32 34 32 31 25\r\n37 41 43 50 50\r\n19 18 16 11 8 6 8\r\n18 21 19 13 6\r\n57 58 56 53 51 47 46\r\n58 57 54 51 52 52\r\n73 72 75 81 84 88\r\n14 13 18 20 21 24\r\n65 65 62 61 59 59 59\r\n76 80 80 83 85 88 91 97\r\n89 85 81 80 77\r\n23 23 23 26 27 25\r\n71 69 70 69 66\r\n29 31 36 37 40 43 45 45\r\n77 74 71 71 71\r\n44 47 44 41 44 39\r\n69 74 77 79 78 75\r\n55 55 57 60 63 62 66\r\n74 73 71 69 69 66 59\r\n25 21 20 17 16 13 13 14\r\n26 30 31 29 31 33 33\r\n37 41 44 45 48 52 53\r\n67 67 68 65 72\r\n76 76 79 77 79 80 83 82\r\n28 30 33 35 33 31\r\n48 54 56 57 61 62 59\r\n31 26 25 24 22 20\r\n10 11 13 13 20\r\n3 3 7 10 12 14 18\r\n75 79 76 79 80 81\r\n16 21 27 29 31 33 35 40\r\n24 20 19 18 18 17 10\r\n90 93 90 83 82 80 79\r\n37 35 33 30 29 27 26 24\r\n20 17 15 13 11 10 9\r\n1 2 5 6 9 11 13 15\r\n42 44 46 48 50 52 54 57\r\n40 38 36 34 31 28\r\n24 23 20 17 16 15 13 12\r\n78 77 75 72 71 68 67\r\n65 66 69 71 74 77 79 82\r\n65 64 62 59 58\r\n70 67 66 64 62\r\n23 21 20 19 16\r\n26 29 30 33 35 36\r\n50 48 47 45 44 41 38\r\n9 12 13 15 17 18 20 21\r\n43 41 40 38 37 34 32\r\n24 23 21 19 16 13 10 9\r\n93 91 88 86 83 80\r\n37 34 33 30 29\r\n36 33 30 29 28 26 23 21\r\n84 87 90 91 94 95 96\r\n57 55 52 51 50 49 47\r\n83 86 87 88 89 92 94 96\r\n56 58 59 62 63 64 67 70\r\n62 65 66 68 69 72 74\r\n52 54 57 59 60 63\r\n46 43 40 39 37\r\n70 69 68 65 63 60\r\n72 73 76 78 79 81\r\n23 24 25 26 29\r\n69 66 65 62 59\r\n49 50 53 54 56 58\r\n39 40 43 44 46 49\r\n50 48 47 45 42 41\r\n21 18 15 14 13 11 8 7\r\n66 68 69 70 72 75\r\n64 61 59 57 55 54 53\r\n22 25 26 29 30 33 36\r\n35 38 41 43 46\r\n22 21 19 17 14 12 10 7\r\n35 33 30 28 25 24\r\n81 79 76 75 73\r\n48 45 42 41 38 37\r\n24 25 27 29 31 32\r\n18 21 22 24 26 28 31 32\r\n21 24 25 26 29 30 32\r\n87 85 83 81 80 77 74 71\r\n35 32 29 27 24 22 19 16\r\n89 91 92 93 96 97\r\n37 35 34 33 32 31 29\r\n84 81 80 77 74 71 69\r\n38 35 32 29 26 25\r\n93 90 89 87 84 82 80 78\r\n88 85 83 81 79 78 76 73\r\n2 3 5 6 9 11 14 17\r\n31 30 27 25 23 20\r\n95 92 91 89 87 85 82\r\n6 7 9 12 13 15 17 20\r\n48 45 42 41 40 39 36 35\r\n76 73 72 69 66 64\r\n82 80 77 75 73 72\r\n67 69 71 72 75 76 78 81\r\n1 2 4 6 9 12 13\r\n21 20 19 16 13 11 9 8\r\n42 39 38 37 34 32\r\n21 22 25 27 30 33 36\r\n57 56 55 54 53 51 48 47\r\n37 35 33 30 27 25 23\r\n14 17 18 21 23 26 27 29\r\n43 45 48 50 51 52 53 55\r\n15 14 13 10 8\r\n17 18 21 22 25 26\r\n13 10 9 8 6 5 4\r\n84 86 88 91 93\r\n91 90 87 84 83\r\n35 32 30 29 28 26\r\n56 59 61 62 65\r\n20 22 24 27 28\r\n32 33 35 36 39\r\n48 49 50 51 53 54 56 58\r\n60 62 64 67 69 71\r\n25 22 19 17 14 12 11\r\n25 28 30 31 33 35 37 38\r\n56 54 51 50 47 46 43\r\n31 32 33 35 38\r\n59 58 56 54 52 50 47 46\r\n86 89 90 93 94 95 96 99\r\n95 93 92 91 88 85\r\n65 64 63 60 58 57 54\r\n74 76 77 80 82\r\n76 78 79 81 82\r\n12 11 10 7 6 4 2\r\n90 87 86 83 82\r\n16 13 12 11 9 8 7\r\n41 38 36 35 32 31 28 26\r\n43 45 46 48 51 52 54 55\r\n94 91 88 85 82 81\r\n77 74 72 69 68 66 65 63\r\n30 32 35 36 37 40 42\r\n82 83 85 87 88 90\r\n67 64 62 60 59 57 54\r\n92 90 89 88 87 84 83 82\r\n21 22 25 27 30\r\n63 65 68 69 71\r\n6 9 11 12 13 16\r\n92 89 88 86 83 80\r\n92 91 89 87 86 85 84 82\r\n18 16 13 11 9\r\n52 50 47 44 41 39 38\r\n10 11 13 15 18\r\n46 44 41 39 38 37 34\r\n27 30 31 33 36\r\n65 67 69 72 73 75 76 77\r\n40 43 46 47 50\r\n88 85 82 79 77 76 74\r\n87 89 91 94 95\r\n88 86 83 80 79 76 73 70\r\n41 43 45 48 51 52 55\r\n87 90 91 93 95\r\n79 82 85 88 89 91 92\r\n7 10 11 14 16 17 19\r\n46 47 48 50 51 52\r\n95 93 90 88 86 84 83 82\r\n68 70 71 73 76\r\n80 79 76 73 71 69\r\n80 83 84 87 89 90\r\n94 93 92 91 88 87\r\n85 82 80 77 74 71 68\r\n32 29 28 25 24 22 20\r\n45 42 40 37 35 33\r\n51 48 47 44 41 39\r\n33 36 38 41 42 45\r\n84 82 81 78 76 75 72 69\r\n24 25 28 29 30 32 33 36\r\n75 77 79 81 82 85 88\r\n2 5 6 9 10\r\n73 75 77 80 82 84 86\r\n69 68 65 62 59\r\n82 81 78 77 75 74\r\n69 71 72 73 76 77 79 80\r\n78 80 82 85 87\r\n95 94 91 90 88 85 84 81\r\n65 68 70 71 72 75 77\r\n80 81 83 85 86 87\r\n42 39 36 34 31 29\r\n82 85 87 88 90 91 92 93\r\n44 41 40 37 36 35 32\r\n71 69 67 65 62 60 58 56\r\n92 89 87 84 81 80 77\r\n31 30 28 26 23 22 19 17\r\n14 16 19 22 23 26\r\n84 86 88 90 91\r\n37 34 33 32 29\r\n75 76 79 82 85 86 87 90\r\n63 66 69 70 73 75\r\n26 27 28 31 33 34 37 39\r\n46 43 40 37 34 32\r\n28 26 25 23 21 19\r\n67 65 63 60 57 55 52\r\n33 35 36 39 42 43 45 46\r\n58 55 52 49 46 45\r\n99 98 97 95 92 90 88\r\n27 30 32 35 36 39 41 43\r\n59 58 57 56 54 53 50 47\r\n31 29 27 25 24 22 21 18\r\n35 33 32 29 28 25 23 20\r\n66 65 62 60 58 56 53 50\r\n50 51 54 55 58 61\r\n71 68 65 63 62\r\n47 48 51 53 55 58 59 61\r\n10 12 14 16 19 21\r\n33 35 37 38 39 41 44 45\r\n94 92 91 90 89\r\n10 12 15 17 19 22\r\n83 86 87 89 91 93 95 98\r\n27 24 22 21 18 15 13\r\n97 95 92 89 88 87\r\n20 21 24 25 28 29 31\r\n72 71 70 69 67 65 64\r\n65 62 59 56 55 52 51 48\r\n79 77 75 72 71 69\r\n70 67 65 63 61 59 56\r\n9 10 12 14 16 17 18 21\r\n9 10 13 15 17 19\r\n49 50 53 56 57\r\n51 54 56 57 58 61 63 66\r\n86 88 90 92 93\r\n37 38 40 42 43\r\n32 33 35 37 38 39\r\n77 75 72 69 68 65 63 60\r\n10 13 15 17 19\r\n29 31 34 35 36 38\r\n61 63 64 67 69 71 74\r\n86 84 82 81 79 76 74\r\n51 48 47 45 44 42 39 37\r\n37 39 42 45 46 49 50\r\n54 57 59 60 62 63 65 66\r\n43 45 48 49 51 52\r\n57 56 55 54 52 50 47\r\n13 15 18 19 20 23 26\r\n4 7 9 12 13 14\r\n24 23 20 19 16 15\r\n53 52 50 49 47 44 43\r\n11 13 15 17 20 22 24\r\n27 26 24 23 22 20\r\n4 5 6 9 11\r\n26 23 21 19 17 14 13 10\r\n34 35 37 39 41 44 46\r\n59 61 63 65 68 71\r\n50 47 46 44 42 41 39 36\r\n23 20 17 15 13\r\n28 25 23 20 17 14 12\r\n2 5 7 10 13 16\r\n16 18 19 20 23 25\r\n5 6 7 8 11 14\r\n44 47 48 50 53 54\r\n43 42 40 39 36 35 34 31\r\n57 59 61 62 65 66 67\r\n37 36 35 33 30 29 28 26\r\n80 79 78 76 73 70\r\n93 92 90 87 86 84\r\n54 52 49 47 46 44 43 41\r\n27 25 22 19 18 15\r\n76 78 80 81 83 85\r\n79 77 74 71 69 67 66\r\n29 28 25 24 21 18 16\r\n2 3 6 9 10\r\n12 9 6 3 2\r\n55 58 60 61 62 63 64 66\r\n16 17 18 20 21 22 25 28\r\n62 63 64 66 68 71 74\r\n17 20 21 23 26 27 29\r\n22 19 18 17 16\r\n44 47 48 51 52 54 56\r\n36 38 41 42 44 46 48 50\r\n28 27 24 23 20 19 17\r\n20 17 15 13 11\r\n65 64 61 60 58 55\r\n49 46 44 43 42 39 37 34\r\n75 73 72 71 68\r\n50 51 53 54 56 57\r\n73 72 69 68 66 63 61\r\n44 45 48 51 52 53\r\n66 65 63 60 59 57\r\n48 49 50 51 54 57 58 59\r\n71 74 77 79 82 84 86 87\r\n60 58 55 53 51 49\r\n12 14 15 16 19\r\n35 36 37 38 40 43 46\r\n20 19 18 17 15 13 12 9\r\n92 89 88 85 83 81\r\n14 15 17 20 21 22 24 27\r\n74 76 78 79 80 82 83 86\r\n61 58 55 52 50 49 46\r\n48 49 50 51 54 57 58 60\r\n86 87 88 90 93 95\r\n49 47 44 41 39 37\r\n10 9 8 7 5\r\n78 80 81 82 83 85 88 91\r\n51 50 48 45 44 41 40\r\n52 50 48 46 44\r\n88 89 90 91 94 95 96\r\n91 89 87 86 84\r\n26 24 23 21 20 18 17\r\n61 60 59 58 57 54 51 50\r\n20 23 25 28 30\r\n39 42 45 46 48 51\r\n49 51 53 55 58 61\r\n20 22 23 24 25 28 30 33\r\n50 52 54 56 59\r\n83 82 81 80 78\r\n66 63 62 60 57\r\n60 58 57 54 51 48 46 45\r\n86 87 90 92 93 95 97 98\r\n14 16 17 19 21\r\n42 41 40 38 35\r\n63 66 68 69 71\r\n78 79 81 84 85 86 87 89\r\n18 17 16 13 11 8\r\n66 68 71 74 77 79\r\n79 81 84 87 88 91\r\n45 46 47 48 50 51\r\n25 26 29 30 31 32 35 36\r\n59 60 63 64 66\r\n89 86 85 83 80 77 75\r\n31 29 27 26 23 21\r\n29 31 34 37 38\r\n78 79 80 82 84 86 89 90\r\n66 64 63 61 58\r\n53 56 58 59 62 64 67 68\r\n14 11 8 7 4\r\n57 59 61 63 65\r\n30 29 27 25 24\r\n29 27 26 23 21 19 16\r\n38 37 36 33 30 28\r\n19 21 24 27 29 32 33 35\r\n69 68 65 64 63 61 59\r\n84 83 82 81 80 79\r\n10 12 14 16 18 21 24\r\n40 41 42 44 47 50 52\r\n30 29 28 27 24 23\r\n62 60 59 57 54\r\n53 52 50 49 48 45 44 41\r\n28 26 25 22 20\r\n64 61 58 55 54 53 51\r\n63 65 66 69 70\r\n52 50 49 47 44 43 40 39\r\n25 27 28 30 31 33 36 37\r\n87 89 92 93 94 96 99\r\n94 91 88 87 85 82 79 76\r\n66 64 63 61 58 57\r\n60 58 57 55 52 49 48\r\n2 3 6 8 11 12 15\r\n34 33 31 30 29 26 24\r\n70 71 73 74 76 78 79\r\n19 22 23 26 29 31 32\r\n68 69 70 72 74 77\r\n73 71 69 68 65\r\n23 24 27 29 32 33\r\n57 56 55 52 51 50 48 46\r\n20 22 24 26 27 29\r\n78 81 84 87 89 91 94\r\n74 75 78 79 81 84 87\r\n48 47 45 44 41 38 35\r\n33 34 37 40 43 45\r\n74 76 79 80 82 84\r\n15 17 20 21 22 25 28 29\r\n7 10 12 14 15 16 19 20\r\n51 48 45 42 39 38 37\r\n1 4 7 9 12 14\r\n82 81 80 78 75 74 73 72\r\n39 37 36 34 32 29\r\n9 11 14 16 18 20\r\n8 9 10 11 13 15 17 20\r\n20 22 23 25 28 29 30\r\n87 84 83 80 79 77 74 72\r\n50 52 55 57 60 62 64 67\r\n75 72 71 69 66 65 62\r\n35 33 31 29 27 24 22\r\n78 79 82 84 86 87 90\r\n16 15 14 11 9 8 6 5\r\n56 58 59 61 64 66 69\r\n37 35 33 31 30\r\n14 16 18 19 22\r\n14 15 18 21 22 25\r\n83 84 86 87 90 92 95\r\n78 80 81 83 85 86\r\n3 4 5 8 9\r\n68 70 73 75 76 77\r\n65 63 62 59 56\r\n18 19 20 21 24 27 29 31\r\n45 47 49 50 53 55 58\r\n45 43 41 38 35 32 30\r\n53 54 55 57 58\r\n90 88 86 85 84 81 78\r\n6 8 10 11 14 15\r\n18 21 23 26 29 31 34\r\n51 50 47 46 43 41 39 37\r\n82 81 78 75 72 71 68\r\n98 95 94 93 90 88 85\r\n20 19 16 14 12\r\n11 14 16 18 19 22 24 27\r\n29 27 24 23 22\r\n19 18 16 13 10 7 5 4\r\n44 41 38 36 34\r\n45 44 42 40 39 37\r\n38 36 35 32 30 29 26\r\n27 28 29 30 33 36\r\n68 69 70 72 73 74\r\n89 90 93 94 96\r\n44 42 41 39 38 35\r\n85 82 81 80 77\r\n32 34 35 36 37 39 41\r\n44 43 42 40 37 36\r\n84 82 80 79 78 75 74 72\r\n40 42 45 48 49 51 52\r\n77 78 80 81 82 84 87 90\r\n37 40 42 43 46\r\n92 90 88 87 84\r\n37 39 40 41 44 45 46\r\n72 75 78 81 83 86 88 91\r\n66 67 69 70 73\r\n40 41 42 44 45\r\n92 90 87 86 83 82 79\r\n33 34 37 38 41\r\n75 77 78 81 83 84 87 90\r\n66 65 63 60 59\r\n69 68 66 65 62\r\n68 71 73 75 76\r\n79 82 85 87 90\r\n61 58 56 55 54 52\r\n6 7 9 12 13 14\r\n25 24 22 20 18 17 14 13\r\n48 51 52 53 56 59\r\n50 48 47 46 43 41 39\r\n3 5 6 9 10\r\n44 42 40 39 38\r\n47 46 43 40 39\r\n24 26 29 31 34 37 40 41\r\n13 15 18 21 22 23 25 28\r\n52 51 50 49 47 46 45 43\r\n48 47 44 42 39 36 34\r\n60 58 56 53 50 49\r\n26 23 20 17 16 15\r\n77 74 72 71 68 67 65 62\r\n9 10 12 13 16 17 19 21\r\n51 54 56 57 58 59 60\r\n54 57 59 61 64 65\r\n35 38 40 42 44\r\n37 38 40 43 45 48\r\n37 38 40 43 45 47 48\r\n80 81 83 84 87\r\n35 37 40 41 43\r\n80 78 75 74 71 68 66\r\n46 48 49 52 53 55 56\r\n53 54 57 58 59 61 64 67\r\n51 54 56 59 62 65 66 67\r\n21 24 26 27 28 30\r\n27 26 24 22 20 19 16\r\n19 21 23 25 28 29 31 32\r\n10 9 8 7 5 4\r\n32 35 36 39 40 42 44 46\r\n51 49 48 46 45 42\r\n51 48 46 45 43\r\n52 55 56 59 61 63 66\r\n19 17 15 12 10 9 6 5\r\n5 6 7 10 13\r\n46 44 43 40 38 36 33\r\n24 22 21 18 15 14 12\r\n50 53 54 57 59\r\n78 80 82 83 85\r\n14 15 16 17 18 21\r\n37 34 33 32 31 28 26\r\n55 57 59 62 65 66 69\r\n87 90 93 95 96 99\r\n37 39 42 44 45\r\n1 4 5 6 8\r\n24 21 20 19 16 15 13\r\n75 73 72 71 69 67\r\n77 79 82 85 87 90\r\n45 42 39 38 35 33 31\r\n34 31 30 27 25 23\r\n40 39 36 33 30\r\n77 80 82 85 87 90 91\r\n76 74 72 70 67\r\n58 60 63 66 69\r\n43 41 40 39 38\r\n46 44 42 40 39\r\n96 94 93 91 88\r\n90 89 88 86 83 80 77\r\n68 67 66 64 62 60 58\r\n87 90 93 94 95 96 99\r\n30 32 33 35 37\r\n41 44 45 46 47\r\n44 43 41 40 37\r\n16 14 11 9 6\r\n97 95 93 91 89 87\r\n23 21 19 16 15\r\n63 60 57 55 53 51 50 47\r\n60 62 65 67 70 73\r\n6 8 10 11 12 15 16\r\n79 78 77 74 71 70\r\n56 57 59 62 63 66\r\n46 43 42 40 38 37 35 32\r\n87 85 83 81 79 77 76 75\r\n74 72 70 69 66\r\n17 14 13 12 9\r\n74 76 77 78 79 81\r\n18 21 23 25 27 29 32\r\n34 31 29 27 25 23 20\r\n86 84 83 82 80 78 75\r\n41 42 44 45 48 51 54 57\r\n36 34 32 31 30 27 24\r\n42 39 37 36 35 32 30 28\r\n84 82 79 78 76 74\r\n42 40 37 36 35 34 31\r\n57 56 54 52 50 48 46\r\n20 21 24 26 27\r\n37 40 41 44 46 48 50 51\r\n28 29 30 31 34\r\n12 14 16 18 21\r\n69 70 73 75 76 77\r\n40 39 36 34 32 30 29 26\r\n57 59 61 64 66 69 70\r\n35 36 37 39 42\r\n56 55 54 53 50 49 48\r\n60 59 58 57 55\r\n33 30 29 27 26 24 22\r\n85 82 81 80 78 76 75\r\n67 64 61 60 57 54 52\r\n86 85 84 81 78\r\n47 45 43 42 41\r\n25 24 23 20 19 18 17 15\r\n58 57 54 53 50 49\r\n88 90 91 92 93 96 99\r\n46 43 41 38 35\r\n20 18 15 13 12 9 7\r\n81 79 77 74 73 72 69 67\r\n61 58 57 54 52 49 48\r\n93 91 90 87 85 84 81 79\r\n9 10 12 13 15 18 19 21\r\n66 69 72 75 77 79 82 83\r\n73 74 76 79 80 81 84\r\n61 59 57 56 55\r\n18 15 12 10 9 8 5\r\n85 82 79 76 74\r\n40 38 36 34 33\r\n69 72 74 77 80 82 83 85\r\n70 71 73 75 77 80 82\r\n78 77 75 73 71 70 69 68\r\n3 6 8 9 10 11 14\r\n5 6 9 12 14\r\n60 58 55 54 52 49 48\r\n8 11 14 15 16\r\n65 66 69 70 72 73 74 77\r\n79 82 84 87 88\r\n61 59 58 55 52 51\r\n44 41 40 39 37 34 32\r\n23 25 28 29 31 32 35\r\n33 36 37 39 41 42 44 46\r\n51 48 45 42 41\r\n62 59 58 56 55 52 49\r\n28 30 32 33 34 35 37 40\r\n52 54 55 57 58 59 62\r\n20 19 16 14 13 10 8 5\r\n60 61 64 67 69\r\n71 69 67 66 63\r\n98 96 95 92 90\r\n6 9 12 13 15 18 19 21\r\n35 36 38 41 43 45 48 50\r\n91 88 85 84 81 78 76\r\n83 85 87 90 91 94 97 98\r\n64 66 69 70 71 72 75 76\r\n57 55 52 51 49\r\n15 17 20 23 25";

		[TestCase(Example, 2)]
		[TestCase(Data, 534)]
		public void QuestionA(string data, int expected)
		{
			List<bool> safe = [];

			string[] reports = data.Split("\r\n");
			foreach (string report in reports)
			{
				string[] levels = report.Split(@" ");
				List<int> levelsAsInts = [];

				foreach (string level in levels)
				{
					int levelAsInt = Convert.ToInt32(level);
					levelsAsInts.Add(levelAsInt);
				}

				safe.Add(IsSafeAscending(levelsAsInts) || IsSafeDescending(levelsAsInts));
			}

			var numberSafe = safe.Count(x => x);

			Console.WriteLine(numberSafe);
			Assert.That(numberSafe, Is.EqualTo(expected));
		}

		private static bool IsSafeAscending(List<int> levels)
		{
			bool isSafe = true;
			bool firstLevel = false;
			int lastLevel = 0;

			foreach (int level in levels)
			{
				if (!firstLevel)
				{
					lastLevel = level;
					firstLevel = true;
					continue;
				}

				isSafe = (level > lastLevel) && (level - lastLevel <= 3);
				if (!isSafe)
				{
					return false;
				}
				lastLevel = level;
			}

			return isSafe;
		}

		private static bool IsSafeDescending(List<int> levels)
		{
			bool isSafe = true;
			bool firstLevel = false;
			int lastLevel = 0;

			foreach (int level in levels)
			{
				if (!firstLevel)
				{
					lastLevel = level;
					firstLevel = true;
					continue;
				}

				isSafe = (level < lastLevel) && (lastLevel - level <= 3);
				if (!isSafe)
				{
					return false;
				}
				lastLevel = level;
			}

			return isSafe;
		}

		[TestCase(Example, 4)]
		[TestCase(Data, 0)]
		public void QuestionB(string data, int expected)
		{
			List<string> safe = [];
			List<string> notSafe = [];

			string[] reports = data.Split("\r\n");
			foreach (string report in reports)
			{
				string[] levels = report.Split(@" ");
				List<int> levelsAsInts = [];

				foreach (string level in levels)
				{
					int levelAsInt = Convert.ToInt32(level);
					levelsAsInts.Add(levelAsInt);
				}

//				var isSafeAsc = IsSafeAscendingWithProblemDampener(levelsAsInts, false);
//				var isSafeDesc = IsSafeDescendingWithProblemDampener(levelsAsInts, false);
//				var isSafe = isSafeAsc || isSafeDesc;

				var isSafeAsc = IsSafeAscendingB(levelsAsInts);
				var isSafeDesc = IsSafeDescendingB(levelsAsInts);
				var isSafe = isSafeAsc || isSafeDesc;

				if (isSafe)
				{
					safe.Add(report);
				}
				else
				{
					notSafe.Add(report);
				}
			}

			Console.WriteLine(safe.Count);
			Assert.That(safe.Count, Is.EqualTo(expected));
		}

		private static bool IsSafeAscendingB(List<int> levels)
		{
			var firstProblemAscending = FirstProblemAscending(levels);
			if (firstProblemAscending != 0)
			{
				switch (firstProblemAscending)
				{
					case 1:
						List<int> dampenedLevels = [];
						dampenedLevels.AddRange(levels);
						dampenedLevels.RemoveAt(0);
						firstProblemAscending = FirstProblemAscending(dampenedLevels);

						if (firstProblemAscending != 0)
						{
							dampenedLevels.Clear();
							dampenedLevels.AddRange(levels);
							dampenedLevels.RemoveAt(1);
							firstProblemAscending = FirstProblemAscending(dampenedLevels);
						}
						break;
					default:
						List<int> dampenedLevels2 = [];
						dampenedLevels2.AddRange(levels);
						dampenedLevels2.RemoveAt(firstProblemAscending);
						firstProblemAscending = FirstProblemAscending(dampenedLevels2);
						break;
				}
			}

			if (firstProblemAscending == 0)
			{
				return true;
			}

			return false;
		}

		private static int FirstProblemAscending(List<int> levels)
		{
			for (int i = 1; i < levels.Count; i++)
			{
				var isSafe = (levels[i] > levels[i - 1]) && (levels[i] - levels[i - 1] <= 3);
				if (!isSafe)
				{
					return i;
				}
			}

			return 0;
		}

		private static bool IsSafeDescendingB(List<int> levels)
		{
			var firstProblemDescending = FirstProblemDescending(levels);
			if (firstProblemDescending != 0)
			{
				switch (firstProblemDescending)
				{
					case 1:
						List<int> dampenedLevels = [];
						dampenedLevels.AddRange(levels);
						dampenedLevels.RemoveAt(0);
						firstProblemDescending = FirstProblemDescending(dampenedLevels);

						if (firstProblemDescending != 0)
						{
							dampenedLevels.Clear();
							dampenedLevels.AddRange(levels);
							dampenedLevels.RemoveAt(1);
							firstProblemDescending = FirstProblemDescending(dampenedLevels);
						}
						break;
					default:
						List<int> dampenedLevels2 = [];
						dampenedLevels2.AddRange(levels);
						dampenedLevels2.RemoveAt(firstProblemDescending);
						firstProblemDescending = FirstProblemDescending(dampenedLevels2);
						break;
				}
			}

			if (firstProblemDescending == 0)
			{
				return true;
			}

			return false;
		}

		private static int FirstProblemDescending(List<int> levels)
		{
			for (int i = 1; i < levels.Count; ++i)
			{
				var isSafe = (levels[i] < levels[i - 1]) && (levels[i - 1] - levels[i] <= 3);
				if (!isSafe)
				{
					return i;
				}
			}

			return 0;
		}

		private static bool IsSafeAscendingWithProblemDampener(List<int> levels, bool dampeningApplied)
		{
			for (int i = 1; i < levels.Count; i++)
			{
				var isSafe = (levels[i] > levels[i - 1]) && (levels[i] - levels[i - 1] <= 3);

				if (!isSafe && !dampeningApplied)
				{
					List<int> dampenedLevels = [];
					dampenedLevels.AddRange(levels);
					dampenedLevels.RemoveAt(i);
					isSafe = IsSafeAscendingWithProblemDampener(dampenedLevels, true);
				}

				if (!isSafe && (i == 1))
				{
					List<int> dampenedLevels = [];
					dampenedLevels.AddRange(levels);
					dampenedLevels.RemoveAt(0);
					isSafe = IsSafeAscendingWithProblemDampener(dampenedLevels, true);
					if (isSafe)
					{
						break;
					}
				}

				if (!isSafe)
				{
					return false;
				}
			}

			return true;
		}

		private static bool IsSafeDescendingWithProblemDampener(List<int> levels, bool dampeningApplied)
		{
			for (int i = 1; i < levels.Count; ++i)
			{
				var isSafe = (levels[i] < levels[i - 1]) && (levels[i - 1] - levels[i] <= 3);
				if (!isSafe && !dampeningApplied)
				{
					List<int> dampenedLevels = [];
					dampenedLevels.AddRange(levels);
					dampenedLevels.RemoveAt(i);
					isSafe = IsSafeDescendingWithProblemDampener(dampenedLevels, true);

					if (!isSafe && (i == 1))
					{
						dampenedLevels = [.. levels];
						dampenedLevels.RemoveAt(0);
						isSafe = IsSafeDescendingWithProblemDampener(dampenedLevels, true);
						if (isSafe)
						{
							break;
						}
					}
				}

				if (!isSafe)
				{
					return false;
				}
			}

			return true;
		}
	}
}